<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitReportReporter -->
<testsuite hostname="DESKTOP-9OJ0MAP" failures="1" tests="11" name="com.SauceDemo.TestClasses.PracticeClassTestNg" time="1.600" errors="0" timestamp="2022-04-14T16:34:40 IST" skipped="1">
  <testcase classname="com.SauceDemo.TestClasses.PracticeClassTestNg" name="methodD" time="0.002"/>
  <system-out/>
  <testcase classname="com.SauceDemo.TestClasses.PracticeClassTestNg" name="methodD" time="0.026"/>
  <system-out/>
  <testcase classname="com.SauceDemo.TestClasses.PracticeClassTestNg" name="methodD" time="0.003"/>
  <system-out/>
  <testcase classname="com.SauceDemo.TestClasses.PracticeClassTestNg" name="methodD" time="0.001"/>
  <system-out/>
  <testcase classname="com.SauceDemo.TestClasses.PracticeClassTestNg" name="methodG" time="1.516"/>
  <system-out/>
  <testcase classname="com.SauceDemo.TestClasses.PracticeClassTestNg" name="methodF" time="0.000">
    <skipped/>
  </testcase> <!-- methodF -->
  <system-out/>
  <testcase classname="com.SauceDemo.TestClasses.PracticeClassTestNg" name="methodD" time="0.035"/>
  <system-out/>
  <testcase classname="com.SauceDemo.TestClasses.PracticeClassTestNg" name="methodE" time="0.006">
    <failure message="expected [true] but found [false]" type="java.lang.AssertionError">
      <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertTrue(Assert.java:45)
at org.testng.Assert.assertTrue(Assert.java:55)
at com.SauceDemo.TestClasses.PracticeClassTestNg.methodE(PracticeClassTestNg.java:35)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
at java.base/java.lang.Thread.run(Thread.java:833)
]]>
    </failure>
  </testcase> <!-- methodE -->
  <system-out/>
  <testcase classname="com.SauceDemo.TestClasses.PracticeClassTestNg" name="methodB" time="0.003"/>
  <system-out/>
  <testcase classname="com.SauceDemo.TestClasses.PracticeClassTestNg" name="methodA" time="0.003"/>
  <system-out/>
  <testcase classname="com.SauceDemo.TestClasses.PracticeClassTestNg" name="methodC" time="0.005"/>
  <system-out/>
</testsuite> <!-- com.SauceDemo.TestClasses.PracticeClassTestNg -->
